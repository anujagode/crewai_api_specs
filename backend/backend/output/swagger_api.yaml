```yaml
openapi: 3.0.0
info:
  title: User Registration API
  version: 1.0.0
  description: API for user registration including email, password, and social media integrations.
servers:
  - url: https://api.example.com/v1
    description: Main production server
paths:
  /register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  minLength: 8
                  example: mySecurePassword
                confirmPassword:
                  type: string
                  description: Must match the password
                  example: mySecurePassword
                agreeToTerms:
                  type: boolean
                  example: true
                promotionalEmails:
                  type: boolean
                  example: false
                thirdPartySharing:
                  type: boolean
                  example: false
              required:
                - email
                - password
                - confirmPassword
                - agreeToTerms
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully.
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: user@example.com
                      id:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426614174000
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Passwords must match.
        '500':
          description: Internal Server Error

  /register/validation:
    get:
      summary: Validate email and phone number
      operationId: validateRegistrationFields
      parameters:
        - name: email
          in: query
          required: false
          description: Email to validate
          schema:
            type: string
            format: email
            example: user@example.com
        - name: phoneNumber
          in: query
          required: false
          description: Phone number to validate
          schema:
            type: string
            example: '+14155552671'
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email is valid.
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid email format.

  /register/socialmedia:
    post:
      summary: Register a user with social media
      operationId: registerUserSocialMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                socialMedia:
                  type: string
                  enum: [facebook, google, twitter]
                  example: google
                socialMediaToken:
                  type: string
                  example: token1234567890
              required:
                - socialMedia
                - socialMediaToken
      responses:
        '201':
          description: User successfully registered via social media
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully with social media.
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: user@example.com
                      id:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426614174000
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid social media token.
        '500':
          description: Internal Server Error

  /register/forgotpassword:
    post:
      summary: Recover user password
      operationId: recoverPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
              required:
                - email
      responses:
        '200':
          description: Password recovery instructions sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Instructions to reset your password have been sent to your email.
        '400':
          description: Email does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Email is not registered in the system.
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    ValidationError:
      type: object
      properties:
        error:
          type: string
          example: Invalid input provided.
    User:
      type: object
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
        email:
          type: string
          example: user@example.com
```
This complete OpenAPI 3.0 YAML specification describes the user registration API with endpoints for user registration, field validation, social media registration, and password recovery. It includes detailed request and response schemas, as well as responses for different HTTP status codes. The specification adheres to security standards and provides clear documentation for implementation and testing.